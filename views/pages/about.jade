extends ../layout

block content
  section.about
    article#about
      header
        h2 Hosts && Magic && A Wizard

      h3 Who is it for?
      
      p
        | This page was built with the help of 
        a(href='https://github.com/express-magic/express-magic' target='_blank') Magic

      p
        | Magic is not for the faint of heart.
        | It is built by programmers for programmers.

      p
        | What you see running here is a bunch of jade templates, stylus css 
        | and browserified javascript, tunneled through express.

    article#magic
      header
        h4 Magic
      
      p
        | in essence, Magic is an express app mounter.

      p
        | it is designed not to be used.
      p
        | it's goal is to magically reduce all the tedious boilerplate
        | that usually has to be written to get an express app running. 
      p
        | All you need to enable Magic in your app is a main.js file:
        pre.highlight
          code.
            require('express-magic')();

    article#hosts
      header
        h4 Hosts:
      p
        | A host is a collection of templates, designed to be served together.
        | One host is a completely independent express application and it can do
        | anything express can do, but most of the time while reducing boilerplate.
        
      p
        | a host consists of 5 lines of javascript, 
        | because we like to be verbose:
        pre.highlight
          code.
            'use strict';
            var express = require('express')
              , H = express()
            ;
            //custom functionality
            module.exports = H;
      p
        | of course you can be less verbose too:
        pre.highlight
          code.
            module.exports = require('express')();
      p
        | The rest of the magic is completely up to you, 
        | you can add any kind of express functionality in your hosts, 
        | install a database, or any other npm module.

    article#middleware
      header
        h4 Express Middlewares
      p
        | There are some helpers for connect middlewares.
        pre.highlight
          code.
            var H = require('express')();

            H.enable('bodyParser');
            H.enable('cookieParser');

            //using config variables, showing default settings:
            H.set('publicDir', 'public');
            H.set('viewsDir', 'views');
            H.set('blogRoot', 'blog');
            H.set('view engine', 'jade')
            
            //need an express.Router?
            var router = express.Router();
            router.get('*', function(req, res, next) {
              console.log('router.get called');
              next();
            });
            S.set('router', router); //note we do not .use the router!
            
            //there are more, documentation will follow.

        | If you use magic-express and find a middleware that is not supported
        | just file an 
        a(href='https://github.com/express-magic/express-magic/issues') issue
        |  on github and we will add it, the goal here is to get a broad level 
        | of support for the most used express middlewares.

    article#docker
      header
        h4 Docker
      p
        | we use docker in development and deployment.
      p
        | This also means that starting is really easy, especially on ubuntu:

      pre.highlight
        code.
          git clone https://github.com/express-magic/magic-server
          cd magic-server
          make install #installs docker on ubuntu
          make all     #builds the three docker images needed

    article#server
      header
        h4 Server

      p
        | The 
        a(href='https://github.com/express-magic/magic-server' target='_blank') magic-server 
        | repository helps you kickstart your development.
        | It comes with all the Makefiles, Dockerfiles and what not you need 
        | to instantly start working on your own content.
        | just go into the hosts directory, change the Makefile to 
        | git clone your custom host directories or clone and use 
        | the localhost directory that is already contained.

    article#makefile
      header
        h4 Makefile
    
      p
        | There are multiple Makefiles and this Paragraphs will be used to list
        | their Features. Work in Progress.


      h4 Root Makefile
      p
        | This Makefile offers a simplified interface 
        | to build, run, log and kill production and dev environment

      pre.highlight
        code.
          all the following commands can be called using
          make 'command'

          base: build the base image
          basef: build the base image with --no-cache

          build: build the magic-server image
          buildf: build the magic-server image with --no-cache

          hosts: build the ./hosts/Dockerfile
            accepts parameter:
            make hosts env='development' will start the dev env

          dev: shorthand for make hosts env='development'
          devf: dev with --no-cache

          run: the docker instance
            accepts parameters:
              xport:   external port
              iport:   internal port
              name:    docker name
              hosttag: docker tag

          kill: kill the docker container

          restart [alias= re]: kill then run

          logs: outputs the docker logs of the running process

          rmContainers: docker rm all docker containers

          rmImages: docker rmi - delete all docker images

          install #apt-get update && apt-get install docker

          update #updates the main repository using git pull

          rebuild: base build dev restart
          rebuildf: basef buildf dev restart
          all: rebuild
      
      h4 Hosts Makefile
      p This File needs to be manually updated whenever you add a host.

      pre.highlight
        code.
          install: git clone
          update:  update the hosts using git pull
          rm:      delete the hosts
          status:  get the git status for all hosts

    article#directory-structure
      header
        h4 directory structure
      p
        | This is the default file structure express-magic expects. 
        | Some of the directory names can be changed by setting config vars 
        | and renaming the directories, 
        | but in general you should use this structure to avoid complications.

      pre.highlight
        code.
          Makefile          //main control interface, see blow
          dockerbase/
            Dockerfile      //this Dockerfile builds the base docker image
          server/
            app.js            //contains require('express-magic')();
            config.js         //holds global and default config
            Dockerfile      //this Dockerfile builds the magic-server
          hosts/
            Dockerfile.tmpl //exposes port 80 and starts the magic
            Makefile        //host install, update, remove and (git) status
            hostname/
              host.js       //the file described above
              config.js     //the express-magic config file
              views/         //the top level view directory
                layout.jade //the main layout file
                pages       //this dir keeps the top level pages
                  index.jade
                  404.jade  //default magic 404 page template.
              public/        //express.static public directory
                css/
                js/
                font/
                img/

    article#jaeh-github
      header
        h4 jaeh.at github
      p
        | The magic-host powering this page can be found at 
        a(href='https://github.com/jaeh/jaeh.at' target='_blank') github.
